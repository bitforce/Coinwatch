#!/usr/local/bin/python2
# -*- coding: utf-8 -*-

from coinwrap import Market

from core.backfiller import backfilled
from core.backfiller import backfill
from core.backup import *
from core.stats import *

from aux.arguments import arguments
from aux.generic import *

import datetime
import math
import time
import csv
import sys
import os.path


# =============================================================================
# GLOBAL VARIABLES
# =============================================================================
args = None
m = Market()
path = '$HOME'  # READ FROM CONFIG FILE


# =============================================================================
# ASSIST FUNCTIONS
# =============================================================================

def set_path(newpath):
    global path
    path = newpath


def get_path():
    return path


def file_exists(f, msg):
    if not os.path.isfile(f):
        print_bold(msg)
        open(f, 'w').close()


# =============================================================================
# MAIN FUNCTIONS
# =============================================================================
def validate():
    if not os.path.isdir('.watch'):
        print_bold('no watch directory found; creating one now')
        os.makedirs('.watch')
    file_exists(watchlist, 'no watchlist.txt found; creating one now')
    file_exists(watchdata, 'no watchlist.csv found; creating one now')
    file_exists(exchanges, 'no exchanges.txt found, creating one now')
    global args
    args = arguments()
    print args
    if not args.run:
        sys.exit()
    print
    if not fetch_watchlist():
        print_warn('not cryptos in watchlist')
        sys.exit()
    if not backfilled():
        backfill()


def update():  # maybe this can be optimized so you don't have to open the file every update
    f = open(watchdata, 'a')
    date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    for crypto in fetch_watchlist():
        price = float(m.coin(crypto)[0]['price_usd'])  # * unicode bug
        symbol = str(m.coin(crypto)[0]['symbol'])
        csv.writer(f).writerow([date, price, symbol])
        if price < sell(symbol, price):
            print_fail(symbol + ' $' + str(price))
        elif price > buy(symbol, price):
            print_pass(symbol + ' $' + str(price))
        else:
            print symbol + ' $' + str(price)
    f.write('\n')
    f.close()


def remove_crypto(name):  # *** I know it's not most efficient, but it works
    coins = fetch_watchlist()
    for coin in coins:
        if coin == name:
            coins.remove(coin)
    f = open(watchlist, 'w')
    for coin in coins:
        f.write(str(coin + ' (' + m.coin(coin)[0]['symbol'] + ')\n'))
    f.close()


def add_crypto(name):  # *** method is slow b/c it needs to request server
    if type(m.coin(name)) is not list:
        print_bold('{} : coin name non-existent or mispelled'.format(name))
        return
    f = open(watchlist, 'a')
    if name not in open(watchlist).read():
        f.write(str(name + ' (' + m.coin(name)[0]['symbol'] + ')\n'))
    else:
        print_warn(name + ' is already being tracked')
    f.close()


def run():
    validate()
    cycles = args.cycles
    while cycles > 0:
        cycles -= 1
        print 'CYCLE ' + str((cycles - args.cycles) * -1)
        print '-----'
        update()
        print_bold('\n...\n')
        time.sleep(args.delay)

# =============================================================================
# RUN
# =============================================================================


run()
